from coloral import *  
import random
while True:
	def s2():
		time.sleep(0.05)
	def s1():
		time.sleep(0.1)
	sec1()
	c()
	green("WPA2-AES2-AES Attack Starting")
	s2()	
	c()
	green("WPA2-AES2-AES Attack Starting.")
	s2()
	c()
	green("WPA2-AES2-AES Attack Starting..")
	s2()

	def menu():
		c()
		green("WPA2-AES2-AES Attack Starting...")
		s2()
		c()
		green("WPA2-AES2-AES aTtack Starting...")
		s2()
		c()
		green("WPA2-AES2-AES atTack Starting...")
		s2()
		c()
		green("WPA2-AES2-AES attAck Starting...")
		s2()
		c()
		green("WPA2-AES2-AES attaCk Starting...")
		s2()
		c()
		green("WPA2-AES2-AES attacK Starting...")
		s2()
		c()
		green("WPA2-AES2-AES Attack Starting...")
	menu()
	menu()
	menu()
	menu()
	green("")
	def selfscan():
		green("self.PRINTED_SCANNING = False")
		sec1()
		green("self.TX_POWER = 0")
		sec1()
		green("self.WPA2-AES2-AES_DISABLE = False ")
		sec1()
		sec1()
		green("self.WPA2-AES2-AES_STRIP_HANDSHAKE = True")
		green("self.WPA2-AES_DEAUTH_COUNT = 1  ")
		print("")
		sec1()
		green("self.WPA2-AES_DEAUTH_TIMEOUT = 10  ")
		s2()
		green("self.WPA2-AES_ATTACK_TIMEOUT = 500 ")
		s2()
		green("self.WPA2-AES_HANDSHAKE_DIR = 'hs'")
		sec1()
		green("self.WPA2-AES_HANDSHAKE_TSHARK = True")   
		s2()
		green("self.WPA2-AES_HANDSHAKE_PYRIT = False")
		s2()
		green("self.WPA2-AES_HANDSHAKE_AIRCRACK = True")
		s2()
		green("self.WPA2-AES_HANDSHAKE_COWPA2-AESTTY = False")
		s2()
		green("self.WEP_DISABLE = False ")
		
		green("self.WEP_PPS = 600 ")
		s2()
		green("self.WEP_TIMEOUT = 600  ")
		s2()
		green("self.WEP_ARP_REPLAY = True")
		s2()
		green("self.WEP_CHOPCHOP = True  ")
		s2()
		green("self.WEP_FRAGMENT = True  ")
		s2()
		green("self.WEP_CAFFELATTE = True ")
		s2()
		green("self.WEP_P0841 = True")
		s2()
		green("self.WEP_HIRTE = True")
		green("self.WEP_CRACK_AT_IVS = 10000")
		green("self.WEP_IGNORE_FAKEAUTH = True  ")
		s2()
		green("self.WEP_FINDINGS = []  ")
		green("self.WEP_SAVE = False  ")

		green("self.WPS_DISABLE = False  ")
		s2()
		green("self.PIXIE = False")
		s2()
		green("self.WPS_FINDINGS = []  ")
		s2()
		green("self.WPS_TIMEOUT = 660 ")
		green("self.WPS_RATIO_THRESHOLD = 0.01  ")
		sec1()
		green("self.WPS_MAX_RETRIES = 0 ")
		s2()
		green("self.SHOW_ALREADY_CRACKED = False  ")
		s2()
		green("self.WIRELESS_IFACE = ''  ")
		s2()
		green("self.MONITOR_IFACE = ''  ")
		s2()
		green("self.TARGET_CHANNEL = 0")
		s2()
		green("self.TARGET_ESSID = ''  ")
		s2()
		green("self.TARGET_BSSID = ''   ")
		sec1()
		green("self.IFACE_TO_TAKE_DOWN = ''   ")
		s2()
		green("self.ORIGINAL_IFACE_MAC = ('', '')   ")
		s2()
		green("self.DO_NOT_CHANGE_MAC = True   ")
		sec1
		green("self.SEND_DEAUTHS = True")  
		s2()
		green("self.TARGETS_REMAINING = 0  ")
		s2()
		green("self.WPA2-AES_CAPS_TO_CRACK = []")
		sec1()
		green("self.THIS_MAC = '2C:F2:K3:W1'  ")
		s2()
		green("self.SHOW_MAC_IN_SCAN = False   ")
		green("self.CRACKED_TARGETS = []  ")
		s2()
		green("self.ATTACK_ALL_TARGETS = False  ")
		s2()
		green("self.ATTACK_MIN_POWER = 1/2 ")
		s2()
		green("self.VERBOSE_APS = True ")
		green("self.CRACKED_TARGETS = self.load_cracked()")
	def MacAdress():
		num = [1, 2, 3, 4, 5, 6, 7, 8, 9]
		num2 = [1, 2, 3, 4, 5, 6, 7, 8, 9]
		num3 = [1, 2, 3, 4, 5, 6, 7, 8, 9]
		num4 = [1, 2, 3, 4, 5, 6, 7, 8, 9]
		alf = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "O", "P", "Q"]
		alf2 = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "O", "P", "Q"]
		alf3 = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "O", "P", "Q"]
		alf4 = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "O", "P", "Q"]
		pr = random.choice(alf)
		se = random.choice(alf2)
		te = random.choice(alf3)
		qu = random.choice(alf4)
		pri = random.choice(num)
		sec = random.choice(num2)
		ter = random.choice(num3)
		qua = random.choice(num4)
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")
		s2()
		green(f"Attacking {nomewi} by MAC-ADRESS {pri}{pr}:{sec}{se}:{ter}{te}:{qua}{qu}")

	blred("IF IN THE YOUR LOCATION HAVE AN NETWORK WITH THE SAME NAME, DONT START THIS TOOL!")
	nomewi = input("WiFi Name: ")
	selfscan()
	selfscan()
	MacAdress()
	MacAdress()
	MacAdress()
	cack = ["@", "&", "*", "#"]
	blgre("The Attack Was Sucess!")
	senha = nomewi.lower()
	cac = random.choice(cack)
	print(f"\033[2;49;93m PassWord: \033[m \033[2;49;91m {senha}{cac}4202 \033[m")
	input("")
	os.system("python3 fhack+.py")
	break
